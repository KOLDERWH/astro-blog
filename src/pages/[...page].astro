---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "@/layout/BaseLayout.astro";
import Pagination from "@/components/Pagination.astro";
import PostCardRen from "@/components/PostCardRen.astro";
import ProfileCard from "@/components/ProfileCard.astro";

// 每一页含有的文章数量
const PER_PAGE = 5;
// 显示的页码个数
const PAGI_LENGTH= 5;

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection('posts');
  
  const sortedPosts = allPosts.sort((a, b) => Number(b.data.pubDate) - Number(a.data.pubDate));
  return paginate(sortedPosts, {
    pageSize: 5,
  });

}

// 所有分页数据都在 "page" 参数中传递
type Props = {
  page: Page;
};

type Page = {
  data: CollectionEntry<"posts">[];
  lastPage: String;
  currentPage: String;
  url:String;
  total: number;
};

const { page } = Astro.props;
const pageTitle = "post";

const tagsPosts = (await getCollection("posts")).filter(
  (post) => post.data.tags
);
const uniqueTag = [...new Set(tagsPosts.map((post) => post.data.tags).flat())];
---

<BaseLayout pageTitle={pageTitle}>
  <div class="contentMain">
    <div class="containerMain">
      <ul>
        {page.data && <PostCardRen posts={page.data} />}
      </ul>
      {
        page.total > PER_PAGE && (
          <Pagination pageCount={page.lastPage}
          itemLength={PAGI_LENGTH}
          url={page.url}
          current={page.currentPage} />
        )
      }
    </div>
    <!-- <div class="profile">
      <ProfileCard postcount={page.data.length} tagsCount={uniqueTag.length} />
    </div> -->
  </div>
</BaseLayout>

<style>
  .content {
    flex-grow: 1  ;
    display: flex;
    padding: 0 8px  0 8px;
    .profile {
      flex: 1;
      margin-top: 16px;
      margin-left: 24px;
    }
  }
  .container {
    flex: 3;
    display: flex;
    flex-direction: column;
    margin: 0;
  }

  ul {
    flex: 3;
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
  }
  /* 手机 */
  @media screen and (max-width: 636px) {
    .profile {
      display: none;
    }
  }
</style>
