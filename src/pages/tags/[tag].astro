---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "@/layout/BaseLayout.astro";
import PostCardRen from "@/components/PostCardRen.astro";

export async function getStaticPaths() {
  const tagsPosts = (await getCollection("posts")).filter(
    (post) => post.data.tags
  );

  const uniqueTag = [
    ...new Set(tagsPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTag.map((tag) => {
    const filterPosts = tagsPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
  
  const sortedPosts = filterPosts.sort((a, b) => Number(b.data.pubDate) - Number(a.data.pubDate));
  
    return { params: { tag }, props: { posts: sortedPosts } };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) => post.data.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
  <div class="content flex-grow ">
    <div class="container">
      <div class="title contentRadius">
        <div class="info">
          标签含有 <span class="tag"> {tag}</span> 的文章
        </div>
        <div class="desc">共{posts.length}篇</div>
      </div>
    
      <ul>
        <PostCardRen posts={filteredPosts} />
      </ul>

    </div>

  </div>
</BaseLayout>

<style>
  .content{
    padding: 0 8px;
    .container{
      padding: 0 4px;
    }
  }
  .title {
    display: flex;
    flex-direction: column;
    justify-content: center;
    background: #fff;
    height: 60px;
    text-align: center;
    font-weight: bold;
    -webkit-box-shadow: 3px 3px 15px #333;
    box-shadow: 3px 3px 15px #333;
    .info,
    .desc {
      padding: 3px 0;
    }
    .tag {
      font-weight: bolder;
      text-decoration: underline;
      color: var(--hovercolor);
      padding: 0 8px;
    }
  }
  ul {
    padding: 0;
  }
</style>
